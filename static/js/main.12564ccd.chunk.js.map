{"version":3,"sources":["store/modules/cart/actions.js","lib/moneyFormatter.js","services/api.js","pages/Home/styles.js","pages/Home/index.js","pages/Cart/styles.js","pages/Cart/index.js","routes.js","styles/global.js","components/Header/styles.js","components/Header/index.js","store/modules/cart/reducer.js","store/modules/rootReducer.js","store/modules/cart/sagas.js","store/modules/rootSaga.js","store/index.js","App.js","serviceWorker.js","index.js","assets/images/bg.svg","assets/images/logo.svg"],"names":["updateAmount","id","amount","type","moneyFormatter","Intl","NumberFormat","style","currency","api","axios","create","baseURL","ProductList","styled","ul","darken","memo","useSelector","state","cart","reduce","product","dispatch","useDispatch","useState","products","setProducts","loadDataFromAPI","useCallback","a","get","productsFromAPI","data","useEffect","renderProductItem","title","price","image","key","toString","src","alt","format","onClick","addToCartRequest","handleAddProduct","size","color","map","Container","div","ProductTable","table","Total","subtotal","total","renderProductRow","decrement","readOnly","value","increment","removeFromCart","handleRemoveItem","path","exact","component","Home","Cart","createGlobalStyle","bg","header","Link","cartSize","length","to","logo","action","produce","draft","productIndex","findIndex","p","push","splice","Number","combineReducers","addToCart","call","response","put","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","rootReducer","run","toast","configure","App","basename","process","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.12564ccd.chunk.js","sourcesContent":["export function addToCartRequest(id) {\n    return {\n        type: '@cart/ADD_REQUEST',\n        id,\n    };\n}\n\nexport function addToCartSuccess(product) {\n    return {\n        type: '@cart/ADD_SUCCESS',\n        product,\n    };\n}\n\nexport function removeFromCart(id) {\n    return {\n        type: '@cart/REMOVE',\n        id,\n    };\n}\n\nexport function updateAmount(id, amount) {\n    return {\n        type: '@cart/UPDATE_AMOUNT',\n        id,\n        amount,\n    };\n}\n","const moneyFormatter = new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL',\n});\n\nexport default moneyFormatter;\n","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL:\n        'https://my-json-server.typicode.com/mcodex/rocketseat-rocketshoes/',\n});\n\nexport default api;\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const ProductList = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 20px;\n    list-style: none;\n\n    li {\n        display: flex;\n        flex-direction: column;\n        background: #fff;\n        border-radius: 4px;\n        padding: 20px;\n\n        img {\n            align-self: center;\n            max-width: 250px;\n        }\n\n        > strong {\n            font-size: 16px;\n            line-height: 20px;\n            color: #333;\n            margin-top: 5px;\n        }\n\n        > span {\n            font-size: 21px;\n            font-weight: bold;\n            margin: 5px 0 20px;\n        }\n\n        button {\n            background: #7159c1;\n            color: #fff;\n            border: 0;\n            border-radius: 4px;\n            overflow: hidden;\n            margin-top: auto;\n\n            display: flex;\n            align-items: center;\n\n            transition: background 0.2s;\n\n            &:hover {\n                background: ${darken(0.03, '#7159c1')};\n            }\n\n            div {\n                display: flex;\n                align-items: center;\n                padding: 12px;\n                background: rgba(0, 0, 0, 0.1);\n\n                svg {\n                    margin-right: 5px;\n                }\n            }\n\n            span {\n                flex: 1;\n                text-align: center;\n                font-weight: bold;\n            }\n        }\n    }\n`;\n","import React, { memo, useState, useEffect, useCallback } from 'react';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addToCartRequest } from '~/store/modules/cart/actions';\n\nimport moneyFormatter from '~/lib/moneyFormatter';\n\nimport api from '~/services/api';\n\nimport { ProductList } from './styles';\n\ntype Product = {\n    id: Number,\n    title: String,\n    price: Number,\n    image: String,\n};\n\nconst Home = () => {\n    const amount = useSelector(state =>\n        state.cart.reduce((amount, product) => {\n            amount[product.id] = product.amount;\n            return amount;\n        }, {})\n    );\n    const dispatch = useDispatch();\n\n    const [products, setProducts] = useState([]);\n\n    const loadDataFromAPI = useCallback(async () => {\n        const productsFromAPI = await api.get('products');\n\n        setProducts(productsFromAPI.data);\n    }, []);\n\n    useEffect(() => {\n        loadDataFromAPI();\n    }, [loadDataFromAPI]);\n\n    const handleAddProduct = ({ id }) => dispatch(addToCartRequest(id));\n\n    const renderProductItem = (product: Product) => {\n        const { id, title, price, image } = product;\n        return (\n            <li key={id.toString()}>\n                <img src={image} alt={title} />\n\n                <strong>{title}</strong>\n                <span>{moneyFormatter.format(price)}</span>\n                <button type=\"submit\" onClick={() => handleAddProduct(product)}>\n                    <div>\n                        <MdAddShoppingCart size={16} color=\"#fff\" />{' '}\n                        {amount[id] || 0}\n                    </div>\n                    <span>ADICIONAR AO CARRINHO</span>\n                </button>\n            </li>\n        );\n    };\n\n    return (\n        <ProductList>\n            {products.map(product => renderProductItem(product))}\n        </ProductList>\n    );\n};\n\nexport default memo(Home);\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n    padding: 30px;\n    background: #fff;\n    border-radius: 4px;\n\n    footer {\n        margin-top: 30px;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        button {\n            background: #7159c1;\n            color: #fff;\n            border: 0;\n            border-radius: 4px;\n            padding: 12px 20px;\n            font-weight: bold;\n            text-transform: uppercase;\n            transition: background 0.2s;\n\n            &:hover {\n                background: ${darken(0.03, '#7159c1')};\n            }\n        }\n    }\n`;\n\nexport const ProductTable = styled.table`\n    width: 100%;\n    thead th {\n        color: #999;\n        text-align: left;\n        padding: 12px;\n    }\n\n    tbody td {\n        padding: 12px;\n        border-bottom: 1px solid #eee;\n    }\n\n    img {\n        height: 100px;\n    }\n\n    strong {\n        color: #333;\n        display: block;\n    }\n\n    span {\n        display: block;\n        margin-top: 5px;\n        font-size: 18px;\n        font-weight: bold;\n    }\n\n    div {\n        display: flex;\n        align-items: center;\n\n        input {\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            color: #666;\n            padding: 6px;\n            width: 50px;\n        }\n    }\n\n    button {\n        background: none;\n        border: 0;\n        padding: 6px;\n    }\n`;\n\nexport const Total = styled.div`\n    display: flex;\n    align-items: baseline;\n\n    span {\n        color: #999;\n        font-weight: bold;\n    }\n\n    strong {\n        font-size: 28px;\n        margin-left: 5px;\n    }\n`;\n","import React, { memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    MdRemoveCircleOutline,\n    MdAddCircleOutline,\n    MdDelete,\n} from 'react-icons/md';\n\nimport { removeFromCart, updateAmount } from '~/store/modules/cart/actions';\n\nimport moneyFormatter from '~/lib/moneyFormatter';\n\nimport { Container, Total, ProductTable } from './styles';\n\nconst Cart = () => {\n    const cart = useSelector(state =>\n        state.cart.map(product => ({\n            ...product,\n            subtotal: product.price * product.amount,\n        }))\n    );\n\n    const total = useSelector(state =>\n        state.cart.reduce(\n            (total, product) => (total += product.price * product.amount),\n            0\n        )\n    );\n\n    const dispatch = useDispatch();\n\n    const increment = product =>\n        dispatch(updateAmount(product.id, product.amount + 1));\n\n    const decrement = product =>\n        dispatch(updateAmount(product.id, product.amount - 1));\n\n    const handleRemoveItem = id => dispatch(removeFromCart(id));\n\n    const renderProductRow = product => {\n        const { id, title, price, image, amount, subtotal } = product;\n\n        return (\n            <tr key={id.toString()}>\n                <td>\n                    <img src={image} alt={title} />\n                </td>\n                <td>\n                    <strong>{title}</strong>\n                    <span>{moneyFormatter.format(price)}</span>\n                </td>\n                <td>\n                    <div>\n                        <button\n                            type=\"button\"\n                            onClick={() => decrement(product)}\n                        >\n                            <MdRemoveCircleOutline size={20} color=\"#7151c9\" />\n                        </button>\n                        <input type=\"number\" readOnly value={amount} />\n                        <button\n                            type=\"button\"\n                            onClick={() => increment(product)}\n                        >\n                            <MdAddCircleOutline size={20} color=\"#7151c9\" />\n                        </button>\n                    </div>\n                </td>\n                <td>\n                    <strong>{moneyFormatter.format(subtotal)}</strong>\n                </td>\n                <td>\n                    <button type=\"button\" onClick={() => handleRemoveItem(id)}>\n                        <MdDelete size={20} color=\"#7151c9\" />\n                    </button>\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        <Container>\n            <ProductTable>\n                <thead>\n                    <tr>\n                        <th />\n                        <th>PRODUTO</th>\n                        <th>QTD</th>\n                        <th>SUBTOTAL</th>\n                        <th />\n                    </tr>\n                </thead>\n\n                <tbody>{cart.map(product => renderProductRow(product))}</tbody>\n            </ProductTable>\n\n            <footer>\n                <button type=\"submit\">Finalizar Pedido</button>\n                <Total>\n                    <span>TOTAL</span>\n                    <strong>{moneyFormatter.format(total)}</strong>\n                </Total>\n            </footer>\n        </Container>\n    );\n};\n\nexport default memo(Cart);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\n\nexport default function() {\n    return (\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/cart\" component={Cart} />\n        </Switch>\n    );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nimport bg from '~/assets/images/bg.svg';\n\nexport default createGlobalStyle`\n\n@import url('https://fonts.googleapis.com/css?family=Lato&display=swap');\n\n * {\n     margin: 0;\n     padding: 0;\n        outline: 0;\n        box-sizing: border-box;\n }\n\n body {\n     background: #191920 url(${bg}) no-repeat center top;\n     -webkit-font-smoothing: antialiased;\n }\n\n body, input , button {\n     font: 14px Lato, sans-serif;\n }\n\n #root {\n     max-width: 1020px;\n     margin: 0 auto;\n     padding: 0 20px 50px;\n }\n\n button {\n     cursor: pointer;\n }\n\n\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 50px 0;\n`;\n\nexport const Cart = styled(Link)`\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    transition: opacity 0.2s;\n\n    &:hover {\n        opacity: 0.7;\n    }\n\n    div {\n        text-align: right;\n        margin-right: 10px;\n\n        strong {\n            display: block;\n            color: #fff;\n        }\n\n        span {\n            font-size: 12px;\n            color: #999;\n        }\n    }\n`;\n","import React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { MdShoppingBasket } from 'react-icons/md';\nimport { Container, Cart } from './styles';\n\nimport logo from '~/assets/images/logo.svg';\n\nconst Header = () => {\n    const cartSize = useSelector(state => state.cart.length);\n\n    return (\n        <Container>\n            <Link to=\"/\">\n                <img src={logo} alt=\"Rocketshoes\" />\n            </Link>\n            <Cart to=\"/cart\">\n                <div>\n                    <strong>Meu Carrinho</strong>\n                    <span>{`${cartSize} ${\n                        cartSize > 1 ? 'itens' : 'item'\n                    }`}</span>\n                </div>\n                <MdShoppingBasket size={36} color=\"#fff\" />\n            </Cart>\n        </Container>\n    );\n};\n\nexport default memo(Header);\n","import produce from 'immer';\n\nconst cart = (state = [], action) => {\n    switch (action.type) {\n        case '@cart/ADD_SUCCESS':\n            return produce(state, draft => {\n                const productIndex = draft.findIndex(\n                    p => p.id === action.product.id\n                );\n\n                if (productIndex >= 0) {\n                    draft[productIndex].amount += 1;\n                } else {\n                    draft.push({ ...action.product, amount: 1 });\n                }\n            });\n        case '@cart/REMOVE':\n            return produce(state, draft => {\n                const productIndex = draft.findIndex(p => p.id === action.id);\n\n                if (productIndex >= 0) {\n                    draft.splice(productIndex, 1);\n                }\n            });\n        case '@cart/UPDATE_AMOUNT': {\n            if (action.amount <= 0) {\n                return state;\n            }\n            return produce(state, draft => {\n                const productIndex = draft.findIndex(p => p.id === action.id);\n                if (productIndex >= 0) {\n                    draft[productIndex].amount = Number(action.amount);\n                }\n            });\n        }\n        default:\n            return state;\n    }\n};\n\nexport default cart;\n","import { combineReducers } from 'redux';\n\nimport cart from './cart/reducer';\n\nexport default combineReducers({\n    cart,\n});\n","import { call, put, all, takeLatest } from 'redux-saga/effects';\n\nimport api from '~/services/api';\n\nimport { addToCartSuccess } from './actions';\n\nfunction* addToCart({ id }) {\n    const response = yield call(api.get, `/products/${id}`);\n\n    yield put(addToCartSuccess(response.data));\n}\n\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart)]);\n","import { all } from 'redux-saga/effects';\n\nimport cart from './cart/sagas';\n\nexport default function* rootSaga() {\n    return yield all([cart]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst enhancer =\n    process.env.NODE_ENV === 'development'\n        ? compose(\n              console.tron.createEnhancer(),\n              applyMiddleware(sagaMiddleware)\n          )\n        : applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { toast } from 'react-toastify';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './config/ReactotronConfig';\n\nimport Routes from './routes';\n\nimport GlobalStyle from './styles/global';\n\nimport Header from './components/Header';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport store from './store';\n\ntoast.configure();\n\nconst App = () => (\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Header />\n            <Routes />\n            <GlobalStyle />\n        </BrowserRouter>\n    </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/bg.3c9a1ce5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.879557c5.svg\";"],"sourceRoot":""}